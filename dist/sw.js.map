{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/sw.js"],"names":[],"mappings":"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","file":"sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","const appName = \"restaurant-reviews\"\r\nconst staticCacheName = appName + \"-v1.0\";\r\n\r\nconst contentImgsCache = appName + \"-images\";\r\n\r\nvar allCaches = [\r\n  staticCacheName,\r\n  contentImgsCache\r\n];\r\n\r\n/** At Service Worker Install time, cache all static assets */\r\nself.addEventListener('install', function(event) {\r\n  event.waitUntil(\r\n    caches.open(staticCacheName).then(function(cache) {\r\n      return cache.addAll([\r\n        '/', // this caches index.html\r\n        '/restaurant.html',\r\n        '/css/styles.css',\r\n        \r\n        \r\n        \r\n        '/js/main.js',\r\n        '/js/restaurant_info.js',\r\n         'manifest.json',\r\n        'data/restaurants.json',\r\n\t\t'/images/icon/restaurant-icon-192.png',\r\n\t\t'/images/icon/restaurant-icon-512.png',\r\n        // add other static assets here like logos, svg icons or any\r\n        // other asset needed for your app UI \r\n        // (Don't add restaurant images, as they are not part of your\r\n        // application's UI)\r\n      ]);\r\n    })\r\n  );\r\n});\r\n\r\n/** At Service Worker Activation, Delete previous caches, if any */\r\nself.addEventListener('activate', function(event) {\r\n  event.waitUntil(\r\n    caches.keys().then(function(cacheNames) {\r\n      return Promise.all(\r\n        cacheNames.filter(function(cacheName) {\r\n          return cacheName.startsWith(appName) &&\r\n                 !allCaches.includes(cacheName);\r\n        }).map(function(cacheName) {\r\n          return caches.delete(cacheName);\r\n        })\r\n      );\r\n    })\r\n  );\r\n});\r\n\r\n/** Hijack fetch requests and respond accordingly */\r\nself.addEventListener('fetch', function(event) {\r\n   \r\n   const requestUrl = new URL(event.request.url);\r\n\r\n  // only highjack request made to our app (not mapbox maps or leaflet, for example)\r\n  if (requestUrl.origin === location.origin) {\r\n\r\n    // Since requests made to restaurant.html have search params (like ?id=1), the url can't be used as the\r\n    // key to access the cache, so just respondWith restaurant.html if pathname startsWith '/restaurant.html'\r\n    if (requestUrl.pathname.startsWith('/restaurant.html')) {\r\n      event.respondWith(caches.match('/restaurant.html'));\r\n      return; // Done handling request, so exit early.\r\n    }\r\n\t\r\n\t  // If the request pathname starts with /img, then we need to handle images.\r\n    if (requestUrl.pathname.startsWith('/img')) {\r\n      event.respondWith(serveImage(event.request));\r\n      return; // Done handling request, so exit early.\r\n    }\r\n\t\r\n  }\r\n    \r\n  // Default behavior: respond with cached elements, if any, falling back to network.\r\n  event.respondWith(\r\n    caches.match(event.request).then(function(response) {\r\n      return response || fetch(event.request);\r\n    })\r\n  );\r\n});\r\n\r\n\r\nfunction serveImage(request) {\r\n  let imageStorageUrl = request.url;\r\n\r\n  // Make a new URL with a stripped suffix and extension from the request url\r\n  // i.e. /img/1-medium.jpg  will become  /img/1\r\n  // we'll use this as the KEY for storing image into cache\r\n  imageStorageUrl = imageStorageUrl.replace(/-small\\.\\w{3}|-medium\\.\\w{3}|-large\\.\\w{3}/i, '');\r\n\r\n  return caches.open(contentImgsCache).then(function(cache) {\r\n    return cache.match(imageStorageUrl).then(function(response) {\r\n      // if image is in cache, return it, else fetch from network, cache a clone, then return network response\r\n      return response || fetch(request).then(function(networkResponse) {\r\n        cache.put(imageStorageUrl, networkResponse.clone());\r\n        return networkResponse;\r\n      });\r\n    });\r\n  });\r\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}